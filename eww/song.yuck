(defvar music_reveal false)

(defpoll song :interval "2s"  "./scripts/music_info --song")
(defpoll song_artist :interval "2s"  "./scripts/music_info --artist")
(defpoll current_status :interval "1s"  "./scripts/music_info --time")
(defpoll song_status :interval "2s"  "./scripts/music_info --status")
(defpoll cover_art :interval "2s"  "./scripts/music_info --cover")

  ;;  Music 
(defwidget music [] 
  (eventbox :onhover "${EWW_CMD} update music_reveal=true"
          :onhoverlost "${EWW_CMD} update music_reveal=false"
      (box :class "module-2" :orientation "h" :space-evenly "false" :vexpand "false" :hexpand "false" 
       (box :class "song_cover_art" :vexpand "false" :hexpand "false" :style "background-image: url('${cover_art}');")
       (button :class "song"  
               :onclick "./scripts/pop music" 
                (label :wrap "true" 
                       :text song))
       (revealer :transition "slideright"
          :reveal music_reveal
          :duration "350ms"
        (box :vexpand "false" :hexpand "false"  
                  (button :class "song_btn_prev" :onclick "./scripts/music_info --prev" "")
         (button :class "song_btn_play" :onclick "./scripts/music_info --toggle" song_status)
         (button :class "song_btn_next" :onclick "./scripts/music_info --next" ""))))))


;;  Music
(defwidget music_pop []
    (box :class "music_pop" :orientation "h" :space-evenly "false" :vexpand "false" :hexpand "false"
     (box :class "music_cover_art" :vexpand "false" :hexpand "false" :style "background-image: url('${cover_art}');")
     (box :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
      (label :halign "center" :class "music" :wrap "true" :limit-width 13 :text song)
      (label :halign "center" :class "music_artist" :wrap "true" :limit-width 15 :text song_artist)
      (box :orientation "h" :spacing 15 :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
       (button :class "music_btn_prev" :onclick "$EWW_CONFIG_DIR/scripts/music_info --prev" "")
       (button :class "music_btn_play" :onclick "$EWW_CONFIG_DIR/scripts/music_info --toggle" song_status)
       (button :class "music_btn_next" :onclick "$EWW_CONFIG_DIR/scripts/music_info --next" ""))
      (box :class "music_bar" :halign "center" :vexpand "false" :hexpand "false" :space-evenly "false"
       (scale :onscroll "mpc -q seek {}" :min 0 :active "true" :max 100 :value current_status)))))


